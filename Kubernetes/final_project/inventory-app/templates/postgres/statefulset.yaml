apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "inventory-app.fullname" . }}-postgresql
  labels:
    {{- include "inventory-app.postgresql.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "inventory-app.fullname" . }}-postgresql
  replicas: 1
  selector:
    matchLabels:
      {{- include "inventory-app.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: postgresql
  template:
    metadata:
      labels:
        {{- include "inventory-app.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: postgresql
    spec:
      securityContext:
        runAsUser: {{ .Values.postgresql.securityContext.runAsUser }}
        runAsGroup: {{ .Values.postgresql.securityContext.runAsGroup }}
        fsGroup: {{ .Values.postgresql.securityContext.fsGroup }}
      containers:
      - name: postgresql
        image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
        imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
        ports:
        - name: postgresql
          containerPort: 5432
          protocol: TCP
        env:
        - name: POSTGRES_DB
          value: {{ .Values.postgresql.database.name }}
        - name: POSTGRES_USER
          value: "inventory_user"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "inventory-app.fullname" . }}-postgresql-secret
              key: postgres-password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_INITDB_ARGS
          value: "--auth-host=scram-sha-256"
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "inventory_user" -d "inventory" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "inventory_user" -d "inventory" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        resources:
          {{- toYaml .Values.postgresql.resources | nindent 12 }}
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: init-scripts
        configMap:
          name: {{ include "inventory-app.fullname" . }}-postgresql-init
          defaultMode: 0755
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.postgresql.storage.storageClass }}
      storageClassName: {{ .Values.postgresql.storage.storageClass }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.postgresql.storage.size }}