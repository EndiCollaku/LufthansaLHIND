apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "inventory-app.fullname" . }}-backend
  labels:
    {{- include "inventory-app.backend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      {{- include "inventory-app.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        {{- include "inventory-app.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      serviceAccountName: {{ include "inventory-app.fullname" . }}-backend
      securityContext:
        runAsNonRoot: {{ .Values.backend.securityContext.runAsNonRoot }}
        runAsUser: {{ .Values.backend.securityContext.runAsUser }}
        fsGroup: {{ .Values.backend.securityContext.runAsUser }}
      containers:
      - name: backend
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        ports:
          - name: http
            containerPort: 5000
            protocol: TCP
        env:
          - name: FLASK_ENV
            valueFrom:
              configMapKeyRef:
                name: {{ include "inventory-app.fullname" . }}-backend-config
                key: flask-env
          - name: APP_NAME
            valueFrom:
              configMapKeyRef:
                name: {{ include "inventory-app.fullname" . }}-backend-config
                key: app-name
          - name: POSTGRES_HOST
            valueFrom:
              configMapKeyRef:
                name: {{ include "inventory-app.fullname" . }}-backend-config
                key: postgres-host
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                name: {{ include "inventory-app.fullname" . }}-backend-config
                key: postgres-db
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: {{ include "inventory-app.fullname" . }}-backend-secret
                key: postgres-user
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "inventory-app.fullname" . }}-backend-secret
                key: postgres-password
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          {{- toYaml .Values.backend.resources | nindent 10 }}
        securityContext:
          readOnlyRootFilesystem: {{ .Values.backend.securityContext.readOnlyRootFilesystem }}
          allowPrivilegeEscalation: {{ .Values.backend.securityContext.allowPrivilegeEscalation }}
          capabilities:
            {{- toYaml .Values.backend.securityContext.capabilities | nindent 12 }}
        volumeMounts:
          - name: tmp
            mountPath: /tmp
          - name: cache
            mountPath: /home/app/.cache
      volumes:
        - name: tmp
          emptyDir: {}
        - name: cache
          emptyDir: {}
